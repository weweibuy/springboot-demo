<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.springbootdemo.midmapper.VipUserMapper">
  <resultMap id="BaseResultMap" type="org.example.springbootdemo.model.midpo.VipUser">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="full_name" jdbcType="VARCHAR" property="fullName" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" typeHandler="org.example.springbootdemo.support.BCryptEncryptMybatisTypeHandler" />
    <result column="phone_no" jdbcType="VARCHAR" property="phoneNo" typeHandler="org.example.springbootdemo.support.AesEncryptMybatisTypeHandler" />
    <result column="id_no" jdbcType="VARCHAR" property="idNo" typeHandler="org.example.springbootdemo.support.AesEncryptMybatisTypeHandler" />
    <result column="is_delete" jdbcType="TINYINT" property="deleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.passwordCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.example.springbootdemo.support.BCryptEncryptMybatisTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.example.springbootdemo.support.BCryptEncryptMybatisTypeHandler} and #{criterion.secondValue,typeHandler=org.example.springbootdemo.support.BCryptEncryptMybatisTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.example.springbootdemo.support.BCryptEncryptMybatisTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.phoneNoCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler} and #{criterion.secondValue,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.idNoCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler} and #{criterion.secondValue,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.passwordCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.example.springbootdemo.support.BCryptEncryptMybatisTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.example.springbootdemo.support.BCryptEncryptMybatisTypeHandler} and #{criterion.secondValue,typeHandler=org.example.springbootdemo.support.BCryptEncryptMybatisTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.example.springbootdemo.support.BCryptEncryptMybatisTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.phoneNoCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler} and #{criterion.secondValue,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.idNoCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler} and #{criterion.secondValue,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, full_name, user_name, password, phone_no, id_no, is_delete, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="org.example.springbootdemo.model.midexample.VipUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from demo_vip_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from demo_vip_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from demo_vip_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.example.springbootdemo.model.midexample.VipUserExample">
    delete from demo_vip_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.example.springbootdemo.model.midpo.VipUser" useGeneratedKeys="true">
    insert into demo_vip_user (full_name, user_name, password, 
      phone_no, 
      id_no, 
      is_delete, create_time, update_time
      )
    values (#{fullName,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.BCryptEncryptMybatisTypeHandler}, 
      #{phoneNo,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler}, 
      #{idNo,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler}, 
      #{deleted,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.example.springbootdemo.model.midpo.VipUser" useGeneratedKeys="true">
    insert into demo_vip_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fullName != null">
        full_name,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phoneNo != null">
        phone_no,
      </if>
      <if test="idNo != null">
        id_no,
      </if>
      <if test="deleted != null">
        is_delete,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fullName != null">
        #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.BCryptEncryptMybatisTypeHandler},
      </if>
      <if test="phoneNo != null">
        #{phoneNo,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler},
      </if>
      <if test="idNo != null">
        #{idNo,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.example.springbootdemo.model.midexample.VipUserExample" resultType="java.lang.Long">
    select count(*) from demo_vip_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update demo_vip_user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.fullName != null">
        full_name = #{record.fullName,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.BCryptEncryptMybatisTypeHandler},
      </if>
      <if test="record.phoneNo != null">
        phone_no = #{record.phoneNo,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler},
      </if>
      <if test="record.idNo != null">
        id_no = #{record.idNo,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler},
      </if>
      <if test="record.deleted != null">
        is_delete = #{record.deleted,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update demo_vip_user
    set id = #{record.id,jdbcType=BIGINT},
      full_name = #{record.fullName,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.BCryptEncryptMybatisTypeHandler},
      phone_no = #{record.phoneNo,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler},
      id_no = #{record.idNo,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler},
      is_delete = #{record.deleted,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.springbootdemo.model.midpo.VipUser">
    update demo_vip_user
    <set>
      <if test="fullName != null">
        full_name = #{fullName,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.BCryptEncryptMybatisTypeHandler},
      </if>
      <if test="phoneNo != null">
        phone_no = #{phoneNo,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler},
      </if>
      <if test="idNo != null">
        id_no = #{idNo,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler},
      </if>
      <if test="deleted != null">
        is_delete = #{deleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.springbootdemo.model.midpo.VipUser">
    update demo_vip_user
    set full_name = #{fullName,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.BCryptEncryptMybatisTypeHandler},
      phone_no = #{phoneNo,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler},
      id_no = #{idNo,jdbcType=VARCHAR,typeHandler=org.example.springbootdemo.support.AesEncryptMybatisTypeHandler},
      is_delete = #{deleted,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="org.example.springbootdemo.model.midexample.VipUserExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from demo_vip_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
</mapper>